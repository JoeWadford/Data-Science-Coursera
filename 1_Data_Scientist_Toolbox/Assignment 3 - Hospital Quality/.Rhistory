filedata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#exploring the data
head(filedata)
dim(filedata)
summary(filedata)
str(filedata)
#visualizing the data from 30-day death rates from heart attack
filedata[ , 11] <- as.numeric(outcome[, 11])
#visualizing the data from 30-day death rates from heart attack
filedata[ , 11] <- as.numeric(filedata[, 11])
#visualizing the data from 30-day death rates from heart attack
filedata[ , 11] <- as.numeric(filedata[, 11])
hist(filedata[, 11])
hist(filedata[, 11])
setwd("C:/Users/joewa/OneDrive/Desktop/Coursera/Assignment 3 - Hospital Quality")
filedata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#exploring the data
head(filedata)
dim(filedata)
summary(filedata)
str(filedata)
#visualizing the data from 30-day death rates from heart attack
filedata[ , 11] <- as.numeric(filedata[, 11])
hist(filedata[, 11])
names(filedata)[11] <- "heart attack"
names(filedata)[17] <- "heart failure"
names(filedata)[23] <- "pneumonia"
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcomes))
{
outcome <- outcomes[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop("Invalid Outcome")
}
}
rankit("Heart Attack", "best")
rankit("heart attack", "best")
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcomes))
{
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop("Invalid Outcome")
}
}
rankit("heart attack", "best")
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcome1))
{
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop("Invalid Outcome")
}
}
rankit("heart attack", "best")
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcome1))
{
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop("Invalid Outcome")
}
}
rankit("heart attack", "best")
stop('Invalid Outcome')
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcome1))
{
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop('Invalid Outcome')
}
}
rankit("heart attack", "best")
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack", "heart failure", "pneumonia")
if(outcome %in% names(outcome1))
{
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringsAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop('Invalid Outcome')
}
}
rankit("heart attack", "best")
##Read outcome data
##
rankit <- function(outcome, num = "best") {
outcome1 <- c("heart attack" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"heart failure" = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"pneumonia" = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
if(outcome %in% names(outcome1))
{
filedata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- outcome1[[outcome]]
workdata <- filedata[ , c("Hospital.Name", "State", outcome)]
good <- !is.na(workdata[outcome])
workdata <- workdata[good,]
if (num %in% c("best", "worst") || is.numeric(num) )
{
states <- workdata[["State"]]
states <- unique(states)
hospital_vect <- vector(mode = "character", length = length(states))
if(num == "best")
{
i<-1
for (st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[1,"Hospital.Name"]
i = i+1
}
}
else if(num == "worst")
{
i <- 1
for( st in states)
{
good <- workdata["State"] == st
statedata <- workdata[good, ]
statedata1 <- statedata[order(statedata[outcome], statedata["Hospital.Name"]),]
hospital_vect[i] <- statedata[nrow(statedata), "Hospital.Name"]
}
}
output <- data.frame(states, hospital_vect, stringsAsFactors = FALSE, row.names = NULL)
colnames(output) <- c("State", "HospitalName")
output
}
else
{
stop("Invalid input")
}
}
else
{
stop('Invalid Outcome')
}
}
rankit("heart attack", "best")
rankit("SC", "heart attack")
best <- function(state, outcome){
#--Input testing:
possible_state <- (unique(outcome_data$State) == state)
possible_outcome <- (c("heart attack", "heart failure", "pneumonia") == outcome)
if(sum(possible_state) != 1){
stop(print("invalid state"))
} else if(sum(possible_outcome) != 1){
stop(print("invalid outcome"))
} else {
#-- Creates State subset
state_filter <- outcome_data[outcome_data$State == state,]
state_filter[state_filter == "Not Available" ] = NA
#Turns "Not Availible" string into NA
state_subset <- data.frame(as.character(state_filter$Hospital.Name),
as.character(state_filter$State),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
colnames(state_subset) <- c("Hospital.Name", "State", "heart_attack", "heart_failure", "pneumonia")
rm(state_filter)
#-- Conditional Min and lookup
if(outcome == "heart attack") {
min_outcome <- min(state_subset$heart_attack, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$heart_attack == min_outcome
& complete.cases(state_subset$heart_attack) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else if (outcome == "heart failure") {
min_outcome <- min(state_subset$heart_failure, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$heart_failure == min_outcome
& complete.cases(state_subset$heart_failure) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else if (outcome == "pneumonia"){
min_outcome <- min(state_subset$pneumonia, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$pneumonia == min_outcome
& complete.cases(state_subset$pneumonia) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else {
stop(print("Not valid input for outcome."))
}
#Gives 1 of best hospital based on name order
print(best_hospitals[1])
}
}
best("SC", "heart attack")
best <- function(state, outcome){
#--Input testing:
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
possible_state <- (unique(outcome_data$State) == state)
possible_outcome <- (c("heart attack", "heart failure", "pneumonia") == outcome)
if(sum(possible_state) != 1){
stop(print("invalid state"))
} else if(sum(possible_outcome) != 1){
stop(print("invalid outcome"))
} else {
#-- Creates State subset
state_filter <- outcome_data[outcome_data$State == state,]
state_filter[state_filter == "Not Available" ] = NA
#Turns "Not Availible" string into NA
state_subset <- data.frame(as.character(state_filter$Hospital.Name),
as.character(state_filter$State),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),
as.numeric(state_filter$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
colnames(state_subset) <- c("Hospital.Name", "State", "heart_attack", "heart_failure", "pneumonia")
rm(state_filter)
#-- Conditional Min and lookup
if(outcome == "heart attack") {
min_outcome <- min(state_subset$heart_attack, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$heart_attack == min_outcome
& complete.cases(state_subset$heart_attack) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else if (outcome == "heart failure") {
min_outcome <- min(state_subset$heart_failure, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$heart_failure == min_outcome
& complete.cases(state_subset$heart_failure) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else if (outcome == "pneumonia"){
min_outcome <- min(state_subset$pneumonia, na.rm = TRUE)
lookup_row <- which(state_subset$State == state
& state_subset$pneumonia == min_outcome
& complete.cases(state_subset$pneumonia) == T)
lookup_col <- which(colnames(state_subset)=="Hospital.Name")
best_hospitals <- sort(as.vector(state_subset[lookup_row,lookup_col]))
} else {
stop(print("Not valid input for outcome."))
}
#Gives 1 of best hospital based on name order
print(best_hospitals[1])
}
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
best("NC", "heart attack", worst)
best("NC", "heart attack", "worst")
best("NC", "heart attack", 7)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
